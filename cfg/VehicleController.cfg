#!/usr/bin/env python
PACKAGE = "hippo_chain"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
# Internals: Level 0
gen.add("update",               bool_t,     0,  "Update Parameters",                    False)
gen.add("save_config",          bool_t,     0,  "Save Parameters",                      False)
gen.add("clear",                bool_t,     0,  "Clear Parameters (to last update)",    False)
gen.add("reset_to_default",     bool_t,     0,  "Reset to default Parameters",          False)


shared = gen.add_group("All Controllers")
# Shared: Level (1 & 2) = 3
shared.add("kCoriolis",         double_t,   3,  "Manipulate terms in C matrix",    -1.0,   -1.0,   10.0)


base = gen.add_group("BaseController")
# Base: Level 1
base.add("kSigma1",             double_t,   1,  "Linear error constant",            0.0,    0.0,    5.0)
base.add("kSigma2",             double_t,   1,  "Angular error constant",           0.0,    0.0,    5.0)
base.add("maxPositionError",    double_t,   1,  "Positional error limit",           0.1,    0.0,    1.0)
base.add("maxQuaternionError",  double_t,   1,  "Angular error limit",              0.5,    0.0,    1.0)
base.add("kP_base",             double_t,   1,  "Proportional controller gain",     0.0,    0.0,    1.0)
base.add("kSat_base",           double_t,   1,  "Gain of saturated part",           0.0,    0.0,    1.0)
base.add("lim_base",            double_t,   1,  "Saturation limit",                 0.0,    0.0,    1.0)


child = gen.add_group("ChildControllers")
# Child: Level 2
child.add("kSigma",             double_t,   2,  "Error constant",                   0.0,    0.0,    1.0)
child.add("maxAngularError",    double_t,   2,  "Angular error limit",              1.0,    0.0,    3.14)
child.add("kP_child",           double_t,   2,  "Proportional controller gain",     0.0,    0.0,    1.0)
child.add("kSat_child",         double_t,   2,  "Gain of saturated part",           0.0,    0.0,    1.0)
child.add("lim_child",          double_t,   2,  "Saturation limit",                 0.0,    0.0,    1.0)


exit(gen.generate(PACKAGE, "hippo_chain_node", "VehicleController"))
